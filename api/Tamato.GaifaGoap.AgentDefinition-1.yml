### YamlMime:ManagedReference
items:
- uid: Tamato.GaifaGoap.AgentDefinition`1
  commentId: T:Tamato.GaifaGoap.AgentDefinition`1
  id: AgentDefinition`1
  parent: Tamato.GaifaGoap
  children:
  - Tamato.GaifaGoap.AgentDefinition`1.CopyAction(UnityEngine.GameObject)
  - Tamato.GaifaGoap.AgentDefinition`1.CopyGoals(UnityEngine.GameObject)
  - Tamato.GaifaGoap.AgentDefinition`1.CopyParameterizedAction(UnityEngine.GameObject)
  - Tamato.GaifaGoap.AgentDefinition`1.gameActions
  - Tamato.GaifaGoap.AgentDefinition`1.goals
  - Tamato.GaifaGoap.AgentDefinition`1.parameterizedActions
  langs:
  - csharp
  - vb
  name: AgentDefinition<T>
  nameWithType: AgentDefinition<T>
  fullName: Tamato.GaifaGoap.AgentDefinition<T>
  type: Class
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: AgentDefinition
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 18
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nAgentDefinition contains lists of possible actions and goals that are used to instantiate <xref href=\"Tamato.GaifaGoap.PlanController\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class AgentDefinition<T> : AgentDefinition where T : class, IModel<T>'
    typeParameters:
    - id: T
      description: Model
    content.vb: >-
      Public Class AgentDefinition(Of T As {Class, IModel(Of T)})
          Inherits AgentDefinition
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - Tamato.GaifaGoap.AgentDefinition
  nameWithType.vb: AgentDefinition(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T)
  name.vb: AgentDefinition(Of T)
- uid: Tamato.GaifaGoap.AgentDefinition`1.gameActions
  commentId: F:Tamato.GaifaGoap.AgentDefinition`1.gameActions
  id: gameActions
  parent: Tamato.GaifaGoap.AgentDefinition`1
  langs:
  - csharp
  - vb
  name: gameActions
  nameWithType: AgentDefinition<T>.gameActions
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.gameActions
  type: Field
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: gameActions
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 21
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  syntax:
    content: >-
      [SerializeField]

      protected List<GameAction<T>> gameActions
    return:
      type: System.Collections.Generic.List{Tamato.GaifaGoap.GameAction{{T}}}
    content.vb: >-
      <SerializeField>

      Protected gameActions As List(Of GameAction(Of T))
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: AgentDefinition(Of T).gameActions
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).gameActions
- uid: Tamato.GaifaGoap.AgentDefinition`1.goals
  commentId: F:Tamato.GaifaGoap.AgentDefinition`1.goals
  id: goals
  parent: Tamato.GaifaGoap.AgentDefinition`1
  langs:
  - csharp
  - vb
  name: goals
  nameWithType: AgentDefinition<T>.goals
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.goals
  type: Field
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: goals
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 23
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  syntax:
    content: >-
      [SerializeField]

      protected List<Goal<T>> goals
    return:
      type: System.Collections.Generic.List{Tamato.GaifaGoap.Goal{{T}}}
    content.vb: >-
      <SerializeField>

      Protected goals As List(Of Goal(Of T))
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: AgentDefinition(Of T).goals
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).goals
- uid: Tamato.GaifaGoap.AgentDefinition`1.parameterizedActions
  commentId: F:Tamato.GaifaGoap.AgentDefinition`1.parameterizedActions
  id: parameterizedActions
  parent: Tamato.GaifaGoap.AgentDefinition`1
  langs:
  - csharp
  - vb
  name: parameterizedActions
  nameWithType: AgentDefinition<T>.parameterizedActions
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.parameterizedActions
  type: Field
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: parameterizedActions
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 25
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  syntax:
    content: >-
      [SerializeField]

      protected List<ParameterizedActionFactory<T>> parameterizedActions
    return:
      type: System.Collections.Generic.List{Tamato.GaifaGoap.ParameterizedActionFactory{{T}}}
    content.vb: >-
      <SerializeField>

      Protected parameterizedActions As List(Of ParameterizedActionFactory(Of T))
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: AgentDefinition(Of T).parameterizedActions
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).parameterizedActions
- uid: Tamato.GaifaGoap.AgentDefinition`1.CopyAction(UnityEngine.GameObject)
  commentId: M:Tamato.GaifaGoap.AgentDefinition`1.CopyAction(UnityEngine.GameObject)
  id: CopyAction(UnityEngine.GameObject)
  parent: Tamato.GaifaGoap.AgentDefinition`1
  langs:
  - csharp
  - vb
  name: CopyAction(GameObject)
  nameWithType: AgentDefinition<T>.CopyAction(GameObject)
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.CopyAction(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: CopyAction
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 32
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nInstantiate and Initialize each <xref href=\"Tamato.GaifaGoap.GameAction%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<IGameAction<T>> CopyAction(GameObject owner)
    parameters:
    - id: owner
      type: UnityEngine.GameObject
      description: <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref> that own the game action instance.
    return:
      type: System.Collections.Generic.List{Tamato.GaifaGoap.IGameAction{{T}}}
      description: List of instantiated game actions.
    content.vb: Public Function CopyAction(owner As GameObject) As List(Of IGameAction(Of T))
  overload: Tamato.GaifaGoap.AgentDefinition`1.CopyAction*
  nameWithType.vb: AgentDefinition(Of T).CopyAction(GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).CopyAction(UnityEngine.GameObject)
- uid: Tamato.GaifaGoap.AgentDefinition`1.CopyGoals(UnityEngine.GameObject)
  commentId: M:Tamato.GaifaGoap.AgentDefinition`1.CopyGoals(UnityEngine.GameObject)
  id: CopyGoals(UnityEngine.GameObject)
  parent: Tamato.GaifaGoap.AgentDefinition`1
  langs:
  - csharp
  - vb
  name: CopyGoals(GameObject)
  nameWithType: AgentDefinition<T>.CopyGoals(GameObject)
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.CopyGoals(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: CopyGoals
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 42
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nInstantiate and Initialize each <xref href=\"Tamato.GaifaGoap.Goal%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<IGoal<T>> CopyGoals(GameObject owner)
    parameters:
    - id: owner
      type: UnityEngine.GameObject
      description: <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref> that own the goal instance.
    return:
      type: System.Collections.Generic.List{Tamato.GaifaGoap.IGoal{{T}}}
      description: List of instantiated goals.
    content.vb: Public Function CopyGoals(owner As GameObject) As List(Of IGoal(Of T))
  overload: Tamato.GaifaGoap.AgentDefinition`1.CopyGoals*
  nameWithType.vb: AgentDefinition(Of T).CopyGoals(GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).CopyGoals(UnityEngine.GameObject)
- uid: Tamato.GaifaGoap.AgentDefinition`1.CopyParameterizedAction(UnityEngine.GameObject)
  commentId: M:Tamato.GaifaGoap.AgentDefinition`1.CopyParameterizedAction(UnityEngine.GameObject)
  id: CopyParameterizedAction(UnityEngine.GameObject)
  parent: Tamato.GaifaGoap.AgentDefinition`1
  langs:
  - csharp
  - vb
  name: CopyParameterizedAction(GameObject)
  nameWithType: AgentDefinition<T>.CopyParameterizedAction(GameObject)
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.CopyParameterizedAction(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Runtime/AIAgent/AgentDefinition.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: CopyParameterizedAction
    path: ../Assets/GaifaGoap/Runtime/AIAgent/AgentDefinition.cs
    startLine: 52
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nInstantiate and Initialize each <xref href=\"Tamato.GaifaGoap.ParameterizedActionFactory%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<ParameterizedActionFactory<T>> CopyParameterizedAction(GameObject owner)
    parameters:
    - id: owner
      type: UnityEngine.GameObject
      description: <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref> that own the factory instance.
    return:
      type: System.Collections.Generic.List{Tamato.GaifaGoap.ParameterizedActionFactory{{T}}}
      description: List of instantiated factories.
    content.vb: Public Function CopyParameterizedAction(owner As GameObject) As List(Of ParameterizedActionFactory(Of T))
  overload: Tamato.GaifaGoap.AgentDefinition`1.CopyParameterizedAction*
  nameWithType.vb: AgentDefinition(Of T).CopyParameterizedAction(GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).CopyParameterizedAction(UnityEngine.GameObject)
references:
- uid: Tamato.GaifaGoap.PlanController
  commentId: T:Tamato.GaifaGoap.PlanController
  parent: Tamato.GaifaGoap
  name: PlanController
  nameWithType: PlanController
  fullName: Tamato.GaifaGoap.PlanController
- uid: Tamato.GaifaGoap
  commentId: N:Tamato.GaifaGoap
  name: Tamato.GaifaGoap
  nameWithType: Tamato.GaifaGoap
  fullName: Tamato.GaifaGoap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: Tamato.GaifaGoap.AgentDefinition
  commentId: T:Tamato.GaifaGoap.AgentDefinition
  parent: Tamato.GaifaGoap
  name: AgentDefinition
  nameWithType: AgentDefinition
  fullName: Tamato.GaifaGoap.AgentDefinition
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Collections.Generic.List{Tamato.GaifaGoap.GameAction{{T}}}
  commentId: T:System.Collections.Generic.List{Tamato.GaifaGoap.GameAction{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameAction<T>>
  nameWithType: List<GameAction<T>>
  fullName: System.Collections.Generic.List<Tamato.GaifaGoap.GameAction<T>>
  nameWithType.vb: List(Of GameAction(Of T))
  fullName.vb: System.Collections.Generic.List(Of Tamato.GaifaGoap.GameAction(Of T))
  name.vb: List(Of GameAction(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tamato.GaifaGoap.GameAction`1
    name: GameAction
    nameWithType: GameAction
    fullName: Tamato.GaifaGoap.GameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tamato.GaifaGoap.GameAction`1
    name: GameAction
    nameWithType: GameAction
    fullName: Tamato.GaifaGoap.GameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{Tamato.GaifaGoap.Goal{{T}}}
  commentId: T:System.Collections.Generic.List{Tamato.GaifaGoap.Goal{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Goal<T>>
  nameWithType: List<Goal<T>>
  fullName: System.Collections.Generic.List<Tamato.GaifaGoap.Goal<T>>
  nameWithType.vb: List(Of Goal(Of T))
  fullName.vb: System.Collections.Generic.List(Of Tamato.GaifaGoap.Goal(Of T))
  name.vb: List(Of Goal(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tamato.GaifaGoap.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: Tamato.GaifaGoap.Goal
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tamato.GaifaGoap.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: Tamato.GaifaGoap.Goal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Tamato.GaifaGoap.ParameterizedActionFactory{{T}}}
  commentId: T:System.Collections.Generic.List{Tamato.GaifaGoap.ParameterizedActionFactory{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ParameterizedActionFactory<T>>
  nameWithType: List<ParameterizedActionFactory<T>>
  fullName: System.Collections.Generic.List<Tamato.GaifaGoap.ParameterizedActionFactory<T>>
  nameWithType.vb: List(Of ParameterizedActionFactory(Of T))
  fullName.vb: System.Collections.Generic.List(Of Tamato.GaifaGoap.ParameterizedActionFactory(Of T))
  name.vb: List(Of ParameterizedActionFactory(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tamato.GaifaGoap.ParameterizedActionFactory`1
    name: ParameterizedActionFactory
    nameWithType: ParameterizedActionFactory
    fullName: Tamato.GaifaGoap.ParameterizedActionFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tamato.GaifaGoap.ParameterizedActionFactory`1
    name: ParameterizedActionFactory
    nameWithType: ParameterizedActionFactory
    fullName: Tamato.GaifaGoap.ParameterizedActionFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.GameAction`1
  commentId: T:Tamato.GaifaGoap.GameAction`1
  name: GameAction<T>
  nameWithType: GameAction<T>
  fullName: Tamato.GaifaGoap.GameAction<T>
  nameWithType.vb: GameAction(Of T)
  fullName.vb: Tamato.GaifaGoap.GameAction(Of T)
  name.vb: GameAction(Of T)
  spec.csharp:
  - uid: Tamato.GaifaGoap.GameAction`1
    name: GameAction
    nameWithType: GameAction
    fullName: Tamato.GaifaGoap.GameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tamato.GaifaGoap.GameAction`1
    name: GameAction
    nameWithType: GameAction
    fullName: Tamato.GaifaGoap.GameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Tamato.GaifaGoap.AgentDefinition`1.CopyAction*
  commentId: Overload:Tamato.GaifaGoap.AgentDefinition`1.CopyAction
  name: CopyAction
  nameWithType: AgentDefinition<T>.CopyAction
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.CopyAction
  nameWithType.vb: AgentDefinition(Of T).CopyAction
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).CopyAction
- uid: System.Collections.Generic.List{Tamato.GaifaGoap.IGameAction{{T}}}
  commentId: T:System.Collections.Generic.List{Tamato.GaifaGoap.IGameAction{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IGameAction<T>>
  nameWithType: List<IGameAction<T>>
  fullName: System.Collections.Generic.List<Tamato.GaifaGoap.IGameAction<T>>
  nameWithType.vb: List(Of IGameAction(Of T))
  fullName.vb: System.Collections.Generic.List(Of Tamato.GaifaGoap.IGameAction(Of T))
  name.vb: List(Of IGameAction(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tamato.GaifaGoap.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: Tamato.GaifaGoap.IGameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tamato.GaifaGoap.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: Tamato.GaifaGoap.IGameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.Goal`1
  commentId: T:Tamato.GaifaGoap.Goal`1
  name: Goal<T>
  nameWithType: Goal<T>
  fullName: Tamato.GaifaGoap.Goal<T>
  nameWithType.vb: Goal(Of T)
  fullName.vb: Tamato.GaifaGoap.Goal(Of T)
  name.vb: Goal(Of T)
  spec.csharp:
  - uid: Tamato.GaifaGoap.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: Tamato.GaifaGoap.Goal
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tamato.GaifaGoap.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: Tamato.GaifaGoap.Goal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.AgentDefinition`1.CopyGoals*
  commentId: Overload:Tamato.GaifaGoap.AgentDefinition`1.CopyGoals
  name: CopyGoals
  nameWithType: AgentDefinition<T>.CopyGoals
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.CopyGoals
  nameWithType.vb: AgentDefinition(Of T).CopyGoals
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).CopyGoals
- uid: System.Collections.Generic.List{Tamato.GaifaGoap.IGoal{{T}}}
  commentId: T:System.Collections.Generic.List{Tamato.GaifaGoap.IGoal{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IGoal<T>>
  nameWithType: List<IGoal<T>>
  fullName: System.Collections.Generic.List<Tamato.GaifaGoap.IGoal<T>>
  nameWithType.vb: List(Of IGoal(Of T))
  fullName.vb: System.Collections.Generic.List(Of Tamato.GaifaGoap.IGoal(Of T))
  name.vb: List(Of IGoal(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tamato.GaifaGoap.IGoal`1
    name: IGoal
    nameWithType: IGoal
    fullName: Tamato.GaifaGoap.IGoal
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tamato.GaifaGoap.IGoal`1
    name: IGoal
    nameWithType: IGoal
    fullName: Tamato.GaifaGoap.IGoal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.ParameterizedActionFactory`1
  commentId: T:Tamato.GaifaGoap.ParameterizedActionFactory`1
  name: ParameterizedActionFactory<T>
  nameWithType: ParameterizedActionFactory<T>
  fullName: Tamato.GaifaGoap.ParameterizedActionFactory<T>
  nameWithType.vb: ParameterizedActionFactory(Of T)
  fullName.vb: Tamato.GaifaGoap.ParameterizedActionFactory(Of T)
  name.vb: ParameterizedActionFactory(Of T)
  spec.csharp:
  - uid: Tamato.GaifaGoap.ParameterizedActionFactory`1
    name: ParameterizedActionFactory
    nameWithType: ParameterizedActionFactory
    fullName: Tamato.GaifaGoap.ParameterizedActionFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tamato.GaifaGoap.ParameterizedActionFactory`1
    name: ParameterizedActionFactory
    nameWithType: ParameterizedActionFactory
    fullName: Tamato.GaifaGoap.ParameterizedActionFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.AgentDefinition`1.CopyParameterizedAction*
  commentId: Overload:Tamato.GaifaGoap.AgentDefinition`1.CopyParameterizedAction
  name: CopyParameterizedAction
  nameWithType: AgentDefinition<T>.CopyParameterizedAction
  fullName: Tamato.GaifaGoap.AgentDefinition<T>.CopyParameterizedAction
  nameWithType.vb: AgentDefinition(Of T).CopyParameterizedAction
  fullName.vb: Tamato.GaifaGoap.AgentDefinition(Of T).CopyParameterizedAction
