### YamlMime:ManagedReference
items:
- uid: Tamato.GaifaGoap.ParameterizedActionFactory`1
  commentId: T:Tamato.GaifaGoap.ParameterizedActionFactory`1
  id: ParameterizedActionFactory`1
  parent: Tamato.GaifaGoap
  children:
  - Tamato.GaifaGoap.ParameterizedActionFactory`1.GetParameterizedActions
  - Tamato.GaifaGoap.ParameterizedActionFactory`1.Initialize(UnityEngine.GameObject)
  langs:
  - csharp
  - vb
  name: ParameterizedActionFactory<T>
  nameWithType: ParameterizedActionFactory<T>
  fullName: Tamato.GaifaGoap.ParameterizedActionFactory<T>
  type: Class
  source:
    remote:
      path: Runtime/AIAgent/ParameterizedActionFactory.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: ParameterizedActionFactory
    path: ../Assets/GaifaGoap/Runtime/AIAgent/ParameterizedActionFactory.cs
    startLine: 9
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nFactory that produce <xref href=\"Tamato.GaifaGoap.IGameAction%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class ParameterizedActionFactory<T> : ScriptableObject, IGameObjectInitializable where T : class, IModel<T>'
    typeParameters:
    - id: T
      description: Model
    content.vb: >-
      Public MustInherit Class ParameterizedActionFactory(Of T As {Class, IModel(Of T)})
          Inherits ScriptableObject
          Implements IGameObjectInitializable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  implements:
  - Tamato.GaifaGoap.IGameObjectInitializable
  nameWithType.vb: ParameterizedActionFactory(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Tamato.GaifaGoap.ParameterizedActionFactory(Of T)
  name.vb: ParameterizedActionFactory(Of T)
- uid: Tamato.GaifaGoap.ParameterizedActionFactory`1.Initialize(UnityEngine.GameObject)
  commentId: M:Tamato.GaifaGoap.ParameterizedActionFactory`1.Initialize(UnityEngine.GameObject)
  id: Initialize(UnityEngine.GameObject)
  parent: Tamato.GaifaGoap.ParameterizedActionFactory`1
  langs:
  - csharp
  - vb
  name: Initialize(GameObject)
  nameWithType: ParameterizedActionFactory<T>.Initialize(GameObject)
  fullName: Tamato.GaifaGoap.ParameterizedActionFactory<T>.Initialize(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Runtime/AIAgent/ParameterizedActionFactory.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: Initialize
    path: ../Assets/GaifaGoap/Runtime/AIAgent/ParameterizedActionFactory.cs
    startLine: 12
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nInitialize this object\n"
  example: []
  syntax:
    content: public abstract void Initialize(GameObject owner)
    parameters:
    - id: owner
      type: UnityEngine.GameObject
      description: <xref href="UnityEngine.GameObject" data-throw-if-not-resolved="false"></xref> that own this object
    content.vb: Public MustOverride Sub Initialize(owner As GameObject)
  overload: Tamato.GaifaGoap.ParameterizedActionFactory`1.Initialize*
  implements:
  - Tamato.GaifaGoap.IGameObjectInitializable.Initialize(UnityEngine.GameObject)
  nameWithType.vb: ParameterizedActionFactory(Of T).Initialize(GameObject)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Tamato.GaifaGoap.ParameterizedActionFactory(Of T).Initialize(UnityEngine.GameObject)
- uid: Tamato.GaifaGoap.ParameterizedActionFactory`1.GetParameterizedActions
  commentId: M:Tamato.GaifaGoap.ParameterizedActionFactory`1.GetParameterizedActions
  id: GetParameterizedActions
  parent: Tamato.GaifaGoap.ParameterizedActionFactory`1
  langs:
  - csharp
  - vb
  name: GetParameterizedActions()
  nameWithType: ParameterizedActionFactory<T>.GetParameterizedActions()
  fullName: Tamato.GaifaGoap.ParameterizedActionFactory<T>.GetParameterizedActions()
  type: Method
  source:
    remote:
      path: Runtime/AIAgent/ParameterizedActionFactory.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: GetParameterizedActions
    path: ../Assets/GaifaGoap/Runtime/AIAgent/ParameterizedActionFactory.cs
    startLine: 18
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nGets actions from factory.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<IGameAction<T>> GetParameterizedActions()
    return:
      type: System.Collections.Generic.IEnumerable{Tamato.GaifaGoap.IGameAction{{T}}}
      description: Actions that are produced by factory.
    content.vb: Public MustOverride Function GetParameterizedActions As IEnumerable(Of IGameAction(Of T))
  overload: Tamato.GaifaGoap.ParameterizedActionFactory`1.GetParameterizedActions*
  nameWithType.vb: ParameterizedActionFactory(Of T).GetParameterizedActions()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Tamato.GaifaGoap.ParameterizedActionFactory(Of T).GetParameterizedActions()
references:
- uid: Tamato.GaifaGoap.IGameAction`1
  commentId: T:Tamato.GaifaGoap.IGameAction`1
  name: IGameAction<T>
  nameWithType: IGameAction<T>
  fullName: Tamato.GaifaGoap.IGameAction<T>
  nameWithType.vb: IGameAction(Of T)
  fullName.vb: Tamato.GaifaGoap.IGameAction(Of T)
  name.vb: IGameAction(Of T)
  spec.csharp:
  - uid: Tamato.GaifaGoap.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: Tamato.GaifaGoap.IGameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tamato.GaifaGoap.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: Tamato.GaifaGoap.IGameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap
  commentId: N:Tamato.GaifaGoap
  name: Tamato.GaifaGoap
  nameWithType: Tamato.GaifaGoap
  fullName: Tamato.GaifaGoap
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: Tamato.GaifaGoap.IGameObjectInitializable
  commentId: T:Tamato.GaifaGoap.IGameObjectInitializable
  parent: Tamato.GaifaGoap
  name: IGameObjectInitializable
  nameWithType: IGameObjectInitializable
  fullName: Tamato.GaifaGoap.IGameObjectInitializable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Tamato.GaifaGoap.ParameterizedActionFactory`1.Initialize*
  commentId: Overload:Tamato.GaifaGoap.ParameterizedActionFactory`1.Initialize
  name: Initialize
  nameWithType: ParameterizedActionFactory<T>.Initialize
  fullName: Tamato.GaifaGoap.ParameterizedActionFactory<T>.Initialize
  nameWithType.vb: ParameterizedActionFactory(Of T).Initialize
  fullName.vb: Tamato.GaifaGoap.ParameterizedActionFactory(Of T).Initialize
- uid: Tamato.GaifaGoap.IGameObjectInitializable.Initialize(UnityEngine.GameObject)
  commentId: M:Tamato.GaifaGoap.IGameObjectInitializable.Initialize(UnityEngine.GameObject)
  parent: Tamato.GaifaGoap.IGameObjectInitializable
  isExternal: true
  name: Initialize(GameObject)
  nameWithType: IGameObjectInitializable.Initialize(GameObject)
  fullName: Tamato.GaifaGoap.IGameObjectInitializable.Initialize(UnityEngine.GameObject)
  spec.csharp:
  - uid: Tamato.GaifaGoap.IGameObjectInitializable.Initialize(UnityEngine.GameObject)
    name: Initialize
    nameWithType: IGameObjectInitializable.Initialize
    fullName: Tamato.GaifaGoap.IGameObjectInitializable.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tamato.GaifaGoap.IGameObjectInitializable.Initialize(UnityEngine.GameObject)
    name: Initialize
    nameWithType: IGameObjectInitializable.Initialize
    fullName: Tamato.GaifaGoap.IGameObjectInitializable.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Tamato.GaifaGoap.ParameterizedActionFactory`1.GetParameterizedActions*
  commentId: Overload:Tamato.GaifaGoap.ParameterizedActionFactory`1.GetParameterizedActions
  name: GetParameterizedActions
  nameWithType: ParameterizedActionFactory<T>.GetParameterizedActions
  fullName: Tamato.GaifaGoap.ParameterizedActionFactory<T>.GetParameterizedActions
  nameWithType.vb: ParameterizedActionFactory(Of T).GetParameterizedActions
  fullName.vb: Tamato.GaifaGoap.ParameterizedActionFactory(Of T).GetParameterizedActions
- uid: System.Collections.Generic.IEnumerable{Tamato.GaifaGoap.IGameAction{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{Tamato.GaifaGoap.IGameAction{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGameAction<T>>
  nameWithType: IEnumerable<IGameAction<T>>
  fullName: System.Collections.Generic.IEnumerable<Tamato.GaifaGoap.IGameAction<T>>
  nameWithType.vb: IEnumerable(Of IGameAction(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Tamato.GaifaGoap.IGameAction(Of T))
  name.vb: IEnumerable(Of IGameAction(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tamato.GaifaGoap.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: Tamato.GaifaGoap.IGameAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tamato.GaifaGoap.IGameAction`1
    name: IGameAction
    nameWithType: IGameAction
    fullName: Tamato.GaifaGoap.IGameAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
