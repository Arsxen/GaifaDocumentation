### YamlMime:ManagedReference
items:
- uid: Tamato.GaifaGoap.IFrontier`1
  commentId: T:Tamato.GaifaGoap.IFrontier`1
  id: IFrontier`1
  parent: Tamato.GaifaGoap
  children:
  - Tamato.GaifaGoap.IFrontier`1.Add(Tamato.GaifaGoap.Node{`0})
  - Tamato.GaifaGoap.IFrontier`1.Clear
  - Tamato.GaifaGoap.IFrontier`1.IsEmpty
  - Tamato.GaifaGoap.IFrontier`1.Next
  langs:
  - csharp
  - vb
  name: IFrontier<T>
  nameWithType: IFrontier<T>
  fullName: Tamato.GaifaGoap.IFrontier<T>
  type: Interface
  source:
    remote:
      path: Runtime/Planner/IFrontier.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: IFrontier
    path: ../Assets/GaifaGoap/Runtime/Planner/IFrontier.cs
    startLine: 6
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nData Structure for storing nodes. Mostly use in planning.\n"
  example: []
  syntax:
    content: >-
      public interface IFrontier<T>
          where T : class, IModel<T>
    typeParameters:
    - id: T
      description: Model
    content.vb: Public Interface IFrontier(Of T As {Class, IModel(Of T)})
  nameWithType.vb: IFrontier(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T)
  name.vb: IFrontier(Of T)
- uid: Tamato.GaifaGoap.IFrontier`1.IsEmpty
  commentId: P:Tamato.GaifaGoap.IFrontier`1.IsEmpty
  id: IsEmpty
  parent: Tamato.GaifaGoap.IFrontier`1
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: IFrontier<T>.IsEmpty
  fullName: Tamato.GaifaGoap.IFrontier<T>.IsEmpty
  type: Property
  source:
    remote:
      path: Runtime/Planner/IFrontier.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: IsEmpty
    path: ../Assets/GaifaGoap/Runtime/Planner/IFrontier.cs
    startLine: 11
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nGets a value indicate that Frontier is empty or not.\n"
  example: []
  syntax:
    content: bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEmpty As Boolean
  overload: Tamato.GaifaGoap.IFrontier`1.IsEmpty*
  nameWithType.vb: IFrontier(Of T).IsEmpty
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).IsEmpty
- uid: Tamato.GaifaGoap.IFrontier`1.Add(Tamato.GaifaGoap.Node{`0})
  commentId: M:Tamato.GaifaGoap.IFrontier`1.Add(Tamato.GaifaGoap.Node{`0})
  id: Add(Tamato.GaifaGoap.Node{`0})
  parent: Tamato.GaifaGoap.IFrontier`1
  langs:
  - csharp
  - vb
  name: Add(Node<T>)
  nameWithType: IFrontier<T>.Add(Node<T>)
  fullName: Tamato.GaifaGoap.IFrontier<T>.Add(Tamato.GaifaGoap.Node<T>)
  type: Method
  source:
    remote:
      path: Runtime/Planner/IFrontier.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: Add
    path: ../Assets/GaifaGoap/Runtime/Planner/IFrontier.cs
    startLine: 16
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nAdd a node to the frontier.\n"
  example: []
  syntax:
    content: void Add(Node<T> node)
    parameters:
    - id: node
      type: Tamato.GaifaGoap.Node{{T}}
    content.vb: Sub Add(node As Node(Of T))
  overload: Tamato.GaifaGoap.IFrontier`1.Add*
  nameWithType.vb: IFrontier(Of T).Add(Node(Of T))
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).Add(Tamato.GaifaGoap.Node(Of T))
  name.vb: Add(Node(Of T))
- uid: Tamato.GaifaGoap.IFrontier`1.Next
  commentId: M:Tamato.GaifaGoap.IFrontier`1.Next
  id: Next
  parent: Tamato.GaifaGoap.IFrontier`1
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: IFrontier<T>.Next()
  fullName: Tamato.GaifaGoap.IFrontier<T>.Next()
  type: Method
  source:
    remote:
      path: Runtime/Planner/IFrontier.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: Next
    path: ../Assets/GaifaGoap/Runtime/Planner/IFrontier.cs
    startLine: 22
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nGets a next node in the frontier.\n"
  example: []
  syntax:
    content: Node<T> Next()
    return:
      type: Tamato.GaifaGoap.Node{{T}}
      description: ''
    content.vb: Function Next As Node(Of T)
  overload: Tamato.GaifaGoap.IFrontier`1.Next*
  nameWithType.vb: IFrontier(Of T).Next()
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).Next()
- uid: Tamato.GaifaGoap.IFrontier`1.Clear
  commentId: M:Tamato.GaifaGoap.IFrontier`1.Clear
  id: Clear
  parent: Tamato.GaifaGoap.IFrontier`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IFrontier<T>.Clear()
  fullName: Tamato.GaifaGoap.IFrontier<T>.Clear()
  type: Method
  source:
    remote:
      path: Runtime/Planner/IFrontier.cs
      branch: main
      repo: https://github.com/Arsxen/GaifaGoap.git
    id: Clear
    path: ../Assets/GaifaGoap/Runtime/Planner/IFrontier.cs
    startLine: 27
  assemblies:
  - Tamato.GaifaGoap
  namespace: Tamato.GaifaGoap
  summary: "\nClear the frontier to empty.\n"
  example: []
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: Tamato.GaifaGoap.IFrontier`1.Clear*
  nameWithType.vb: IFrontier(Of T).Clear()
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).Clear()
references:
- uid: Tamato.GaifaGoap
  commentId: N:Tamato.GaifaGoap
  name: Tamato.GaifaGoap
  nameWithType: Tamato.GaifaGoap
  fullName: Tamato.GaifaGoap
- uid: Tamato.GaifaGoap.IFrontier`1.IsEmpty*
  commentId: Overload:Tamato.GaifaGoap.IFrontier`1.IsEmpty
  name: IsEmpty
  nameWithType: IFrontier<T>.IsEmpty
  fullName: Tamato.GaifaGoap.IFrontier<T>.IsEmpty
  nameWithType.vb: IFrontier(Of T).IsEmpty
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tamato.GaifaGoap.IFrontier`1.Add*
  commentId: Overload:Tamato.GaifaGoap.IFrontier`1.Add
  name: Add
  nameWithType: IFrontier<T>.Add
  fullName: Tamato.GaifaGoap.IFrontier<T>.Add
  nameWithType.vb: IFrontier(Of T).Add
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).Add
- uid: Tamato.GaifaGoap.Node{{T}}
  commentId: T:Tamato.GaifaGoap.Node{`0}
  parent: Tamato.GaifaGoap
  definition: Tamato.GaifaGoap.Node`1
  name: Node<T>
  nameWithType: Node<T>
  fullName: Tamato.GaifaGoap.Node<T>
  nameWithType.vb: Node(Of T)
  fullName.vb: Tamato.GaifaGoap.Node(Of T)
  name.vb: Node(Of T)
  spec.csharp:
  - uid: Tamato.GaifaGoap.Node`1
    name: Node
    nameWithType: Node
    fullName: Tamato.GaifaGoap.Node
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tamato.GaifaGoap.Node`1
    name: Node
    nameWithType: Node
    fullName: Tamato.GaifaGoap.Node
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.Node`1
  commentId: T:Tamato.GaifaGoap.Node`1
  name: Node<T>
  nameWithType: Node<T>
  fullName: Tamato.GaifaGoap.Node<T>
  nameWithType.vb: Node(Of T)
  fullName.vb: Tamato.GaifaGoap.Node(Of T)
  name.vb: Node(Of T)
  spec.csharp:
  - uid: Tamato.GaifaGoap.Node`1
    name: Node
    nameWithType: Node
    fullName: Tamato.GaifaGoap.Node
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Tamato.GaifaGoap.Node`1
    name: Node
    nameWithType: Node
    fullName: Tamato.GaifaGoap.Node
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Tamato.GaifaGoap.IFrontier`1.Next*
  commentId: Overload:Tamato.GaifaGoap.IFrontier`1.Next
  name: Next
  nameWithType: IFrontier<T>.Next
  fullName: Tamato.GaifaGoap.IFrontier<T>.Next
  nameWithType.vb: IFrontier(Of T).Next
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).Next
- uid: Tamato.GaifaGoap.IFrontier`1.Clear*
  commentId: Overload:Tamato.GaifaGoap.IFrontier`1.Clear
  name: Clear
  nameWithType: IFrontier<T>.Clear
  fullName: Tamato.GaifaGoap.IFrontier<T>.Clear
  nameWithType.vb: IFrontier(Of T).Clear
  fullName.vb: Tamato.GaifaGoap.IFrontier(Of T).Clear
